name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-clippy:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [all, default]
        rust:
          - stable
        include:
          - style: all
            flags: '--all-features'
          - style: default
            flags: ''
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
            key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace ${{ matrix.flags }}

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect
  
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [all, default]
        rust:
          - stable
        include:
          - style: all
            flags: '--all-features'
          - style: default
            flags: ''
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
            key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

      - uses: taiki-e/install-action@nextest

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --all ${{ matrix.flags }}